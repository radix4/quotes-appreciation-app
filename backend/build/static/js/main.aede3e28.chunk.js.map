{"version":3,"sources":["images/registration.png","services/users.js","components/Notification.js","components/RegistrationPage.js","services/quotes.js","components/Quote.js","components/Quotes.js","components/MainPage.js","images/login.png","services/login.js","components/LoginPage.js","App.js","index.js"],"names":["baseUrl","token","get","id","a","axios","request","data","create","newObject","config","headers","Authorization","post","response","setToken","newToken","Notification","message","Alert","variant","RegistrationPage","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","addUser","event","preventDefault","user","userService","then","returnedUser","console","log","setTimeout","document","getElementById","reset","Container","style","backgroundColor","fluid","Row","Col","className","Image","src","background","padding","Form","onSubmit","Group","as","controlId","onChange","target","value","Label","column","md","Control","type","placeholder","span","offset","Button","to","getAll","update","put","Quote","quote","votes","setVotes","useEffect","usersService","quotesService","returnedQuote","vote","handleLike","updateQuote","Jumbotron","content","author","onClick","date","substring","Quotes","quotes","filterByContent","quotesBySearch","filter","map","i","containerStyle","minHeight","leftRightCols","textAlign","display","middleCol","margin","MainPage","setQuotes","setQuote","setAuthor","logout","setLogout","search","setSearch","setUser","loggedUserJSON","window","localStorage","getItem","JSON","parse","initialQuotes","handleMostVotes","copy","sort","b","handleLongest","length","handleShortest","handleMostRecent","Date","saveQuote","newQuote","concat","toLowerCase","indexOf","rows","removeItem","login","credentials","LoginPage","loggedIn","setLoggedIn","handleLogin","loginService","setItem","stringify","exact","path","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.aede3e28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/registration.40b72526.png\";","/* This module is responsible for sending requests to the server */\nimport axios from 'axios'\nconst baseUrl = '/api/users'\n\n// token is a private variable\nlet token = null\n\n// token's value can be changed\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst get = async (id) => {\n  const request = await axios.get(`${baseUrl}/${id}`)\n  return request.data\n}\n\n// create users\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }, // token is set to Authorization\n  }\n\n  // header is given as 3rd param of axis post method\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nexport default { create, setToken, get }\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (message === 'Yay, account successfully created!') {\n    return <Alert variant='success'>{message}</Alert>\n  }\n\n  return <Alert variant='danger'>{message}</Alert>\n}\n\nexport default Notification\n","import React, { useState } from 'react'\nimport { Col, Row, Container, Image, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport background from '../images/registration.png'\nimport userService from '../services/users'\nimport Notification from './Notification'\n\nconst RegistrationPage = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const rightRow = {\n    padding: '30%',\n  }\n\n  const container = {\n    backgroundColor: '#F0F8FF',\n  }\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const addUser = async (event) => {\n    event.preventDefault()\n\n    const user = {\n      username: username,\n      password: password,\n    }\n\n    try {\n      await userService.create(user).then((returnedUser) => {\n        console.log('create user success!')\n      })\n\n      setErrorMessage('Yay, account successfully created!')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n\n      setUsername('')\n      setPassword('')\n\n      // clear react bootstrap form\n      document.getElementById('create-user-form').reset()\n    } catch (exception) {\n      setErrorMessage('Oh no, do not leave it blank!')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <Container style={container} fluid>\n      <Row>\n        <Col className='left-col'>\n          <Image className='background-img' src={background}></Image>\n        </Col>\n\n        <Col>\n          <Row style={rightRow}>\n            <Notification message={errorMessage} />\n            <h2>Registration</h2>\n            <Form id='create-user-form' onSubmit={addUser}>\n              {/* =============USERNAME============= */}\n              <Form.Group\n                as={Row}\n                controlId='userName'\n                onChange={handleUsernameChange}>\n                <Form.Label column md={4}>\n                  Username\n                </Form.Label>\n                <Col md={8}>\n                  <Form.Control type='text' placeholder='Username' />\n                </Col>\n              </Form.Group>\n              {/* =============PASSWORD============= */}\n              <Form.Group\n                as={Row}\n                controlId='password'\n                onChange={handlePasswordChange}>\n                <Form.Label column md={4}>\n                  Password\n                </Form.Label>\n                <Col md={8}>\n                  <Form.Control type='password' placeholder='Password' />\n                </Col>\n              </Form.Group>\n              {/* =============SUBMIT============= */}\n              <Form.Group as={Row}>\n                <Col md={{ span: 10, offset: 4 }}>\n                  <Button type='submit'>Register</Button>\n                </Col>\n              </Form.Group>\n              <>Have an account? </>\n              <Link to='/'> Back to Login</Link>\n            </Form>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default RegistrationPage\n","import axios from 'axios'\nconst baseUrl = '/api/quotes'\n\n// token is a private variable\nlet token = null\n\n// token's value can be changed\nconst setToken = (newToken) => {\n  console.log('new token: ', newToken)\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst get = async (id) => {\n  const request = await axios.get(`${baseUrl}/${id}`)\n  return request.data\n}\n\n// create quotes\nconst create = async (newObject) => {\n  console.log('new Object: ', newObject)\n  const config = {\n    headers: { Authorization: token }, // token is set to Authorization\n  }\n\n  // header is given as 3rd param of axis post method\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\n// update quote\nconst update = async (id, newObject) => {\n  const request = await axios.put(`${baseUrl}/${id}`, newObject)\n  return request.data\n}\n\nexport default { setToken, getAll, create, update, get }\n","import React, { useState, useEffect } from 'react'\nimport { Jumbotron, Button, Col, Row } from 'react-bootstrap'\nimport quotesService from '../services/quotes'\nimport usersService from '../services/users'\n\nconst Quote = ({ quote }) => {\n  const [votes, setVotes] = useState(0)\n  const [username, setUsername] = useState('')\n\n  useEffect(() => {\n    usersService.get(quote.user).then((returnedUser) => {\n      setUsername(returnedUser.username)\n    })\n  }, [])\n\n  quotesService.get(quote.id).then((returnedQuote) => {\n    setVotes(returnedQuote.vote)\n  })\n\n  const handleLike = async (event) => {\n    const updateQuote = {\n      vote: votes + 1,\n    }\n\n    await quotesService.update(quote.id, updateQuote).then((returnedQuote) => {\n      console.log('vote success')\n    })\n\n    setVotes(votes + 1)\n  }\n\n  return (\n    <Jumbotron className='jumbotron'>\n      <div className='bg-overlay animated'>\n        <p>{quote.content}</p>\n        <h3 className='text-right'>{quote.author}</h3>\n      </div>\n      <Row>\n        <Col>\n          <Button onClick={handleLike}>\n            <i className='fa fa-thumbs-up thumbs-up-button'>{' ' + votes}</i>\n          </Button>\n        </Col>\n        <Col className='text-right'>\n          <i className='quote-user-postdate'>\n            Posted by <b>{username}</b> on {quote.date.substring(0, 10)}\n          </i>\n        </Col>\n      </Row>\n    </Jumbotron>\n  )\n}\n\nexport default Quote\n","import React from 'react'\nimport Quote from './Quote'\n\nconst Quotes = ({ quotes, filterByContent }) => {\n  let quotesBySearch = quotes.filter(filterByContent)\n\n  return (\n    <div>\n      {quotesBySearch.map((quote, i) => (\n        <Quote key={i} quote={quote} />\n      ))}\n    </div>\n  )\n}\n\nexport default Quotes\n","import React, { useState, useEffect } from 'react'\nimport Quotes from './Quotes'\nimport { Col, Row, Container, Form, Button, Jumbotron } from 'react-bootstrap'\nimport quotesService from '../services/quotes'\nimport { Route, Redirect } from 'react-router-dom'\nimport Notification from './Notification'\n\nconst containerStyle = {\n  backgroundColor: '#ebc1b7',\n  minHeight: '940px',\n}\n\nconst leftRightCols = {\n  textAlign: 'center',\n  display: 'flex',\n}\n\nconst middleCol = {\n  margin: '5% 0% 5% 0%',\n}\n\nconst MainPage = () => {\n  const [quotes, setQuotes] = useState([])\n  const [quote, setQuote] = useState('')\n  const [author, setAuthor] = useState('')\n  const [logout, setLogout] = useState(false)\n  const [search, setSearch] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      quotesService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    quotesService.getAll().then((initialQuotes) => {\n      setQuotes(initialQuotes)\n    })\n  }, [])\n\n  const onChangeQuote = (event) => setQuote(event.target.value)\n\n  const onChangeAuthor = (event) => setAuthor(event.target.value)\n\n  const onChangeSearch = (event) => setSearch(event.target.value)\n\n  const handleLogout = (event) => {\n    window.localStorage.removeItem('loggedInUser')\n    setLogout(true)\n  }\n\n  const handleMostVotes = async (event) => {\n    let copy\n    await quotesService.getAll().then((initialQuotes) => {\n      copy = initialQuotes\n    })\n\n    copy.sort((a, b) => b.vote - a.vote)\n    setQuotes(copy)\n  }\n\n  const handleLongest = async (event) => {\n    let copy\n    await quotesService.getAll().then((initialQuotes) => {\n      copy = initialQuotes\n    })\n\n    copy.sort((a, b) => b.content.length - a.content.length)\n    setQuotes(copy)\n  }\n\n  const handleShortest = async (event) => {\n    let copy\n    await quotesService.getAll().then((initialQuotes) => {\n      copy = initialQuotes\n    })\n\n    copy.sort((a, b) => a.content.length - b.content.length)\n    setQuotes(copy)\n  }\n\n  const handleMostRecent = async (event) => {\n    let copy\n    await quotesService.getAll().then((initialQuotes) => {\n      copy = initialQuotes\n    })\n\n    copy.sort((a, b) => new Date(b.date) - new Date(a.date))\n    setQuotes(copy)\n  }\n\n  const saveQuote = async (event) => {\n    event.preventDefault() // avoid form submit to refresh the page\n\n    const newQuote = {\n      content: quote,\n      author: author,\n      vote: 0,\n    }\n\n    try {\n      await quotesService.create(newQuote).then((returnedQuote) => {\n        console.log('create new quote success!')\n        setQuotes(quotes.concat(returnedQuote))\n      })\n\n      setQuote('')\n      setAuthor('')\n      document.getElementById('create-quote-form').reset()\n    } catch {\n      setErrorMessage('Oh snap, you cannot post a blank quote!')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const filterByContent = (quote) => {\n    return quote.content.toLowerCase().indexOf(search) !== -1\n  }\n\n  if (logout) {\n    return (\n      <Route>\n        <Redirect to='/' />\n      </Route>\n    )\n  }\n\n  return (\n    <Container style={containerStyle} fluid>\n      <Row>\n        <Col\n          style={leftRightCols}\n          md={3}\n          className='row justify-content-md-center'>\n          <h1 className='main-page-side-text'>\n            Have <br></br> a quotes <br></br>that you like?\n          </h1>\n        </Col>\n\n        {/* ===================== MIDDLE COLUMN ================== */}\n        <Col style={middleCol} md={6}>\n          <Row className='justify-content-md-center'>\n            <h1 className='display-2'> Quotes</h1>\n          </Row>\n\n          <Row as={Col}>\n            <Col style={{ margin: '10%' }}>\n              {/* ====================== SEARCH BAR ===================== */}\n              <Form.Group controlId='search-bar' onChange={onChangeSearch}>\n                <Form.Control type='text' placeholder='Search for a quote..' />\n              </Form.Group>\n\n              {/* ====================== FILTER BUTTONS ================== */}\n              <div>\n                <Button variant='primary' onClick={handleMostVotes}>\n                  Most Votes\n                </Button>{' '}\n                <Button variant='secondary' onClick={handleMostRecent}>\n                  Most Recent\n                </Button>{' '}\n                <Button variant='success' onClick={handleLongest}>\n                  Longest\n                </Button>{' '}\n                <Button variant='warning' onClick={handleShortest}>\n                  Shortest\n                </Button>\n              </div>\n\n              <div>\n                <br></br>\n              </div>\n\n              {/* ====================== QUOTES DISPLAY ================== */}\n              <Quotes quotes={quotes} filterByContent={filterByContent} />\n              <Jumbotron>\n                <Notification message={errorMessage} />\n                <Form id='create-quote-form' onSubmit={saveQuote}>\n                  {/* =============QUOTES INPUT============= */}\n                  <Form.Group\n                    as={Row}\n                    controlId='quotes-text'\n                    onChange={onChangeQuote}>\n                    <Form.Label column md={2}>\n                      Quote\n                    </Form.Label>\n                    <Col md={10}>\n                      <Form.Control\n                        as='textarea'\n                        rows={3}\n                        placeholder='e.g. \"A problem is a chance for you to do your best.\"'\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  {/* =============AUTHOR INPUT============= */}\n                  <Form.Group\n                    as={Row}\n                    controlId='author-text'\n                    onChange={onChangeAuthor}>\n                    <Form.Label column md={2}>\n                      Author\n                    </Form.Label>\n                    <Col md={10}>\n                      <Form.Control\n                        type='text'\n                        placeholder='e.g. Duke Ellington'\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  {/* =============SAVE BUTTON============= */}\n                  <Form.Group as={Row}>\n                    <Col md={{ span: 3, offset: 10 }}>\n                      <Button type='submit'>Save</Button>\n                    </Col>\n                  </Form.Group>\n                </Form>\n              </Jumbotron>\n            </Col>\n          </Row>\n        </Col>\n        <Col\n          style={leftRightCols}\n          md={3}\n          className='row justify-content-md-center'>\n          <p className='logout-button'>\n            <Button type='submit' onClick={handleLogout}>\n              Logout\n            </Button>\n          </p>\n\n          <h1 className='main-page-side-text'>\n            Don't <br></br> forget to give <br></br> the authors the credits{' '}\n            <br></br> they deserve!\n          </h1>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default MainPage\n","export default __webpack_public_path__ + \"static/media/login.18d5d104.png\";","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React, { useState } from 'react'\nimport { Col, Row, Container, Image, Form, Button } from 'react-bootstrap'\nimport { Route, Link, Redirect } from 'react-router-dom'\nimport background from '../images/login.png'\nimport loginService from '../services/login'\nimport quotesService from '../services/quotes'\nimport Notification from './Notification'\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const leftCol = {\n    padding: '30%',\n  }\n\n  const container = {\n    backgroundColor: '#F0F8FF',\n  }\n\n  const onChangeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const onChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      setUsername('')\n      setPassword('')\n      quotesService.setToken(user.token)\n      document.getElementById('login-form').reset()\n\n      console.log('logged in')\n      setLoggedIn(true)\n    } catch (exception) {\n      console.log('login fail, wrong credentials')\n      setErrorMessage('Oh no, wrong credentials!')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setLoggedIn(false)\n    }\n  }\n\n  if (loggedIn) {\n    return (\n      <Route exact path='/'>\n        <Redirect to='/main' />\n      </Route>\n    )\n  }\n  return (\n    <Container style={container} fluid>\n      <Row className='align-items-center'>\n        <Col md={4}>\n          <Row style={leftCol}>\n            <Notification message={errorMessage} />\n            <h2>Login</h2>\n            <Form id='login-form' onSubmit={handleLogin}>\n              {/* =============USERNAME============= */}\n              <Form.Group\n                as={Row}\n                controlId='userName'\n                onChange={onChangeUsername}>\n                <Form.Label column md={4}>\n                  Username\n                </Form.Label>\n                <Col md={8}>\n                  <Form.Control type='text' placeholder='Username' />\n                </Col>\n              </Form.Group>\n\n              {/* =============PASSWORD============= */}\n              <Form.Group\n                as={Row}\n                controlId='password'\n                onChange={onChangePassword}>\n                <Form.Label column md={4}>\n                  Password\n                </Form.Label>\n                <Col md={8}>\n                  <Form.Control type='password' placeholder='Password' />\n                </Col>\n              </Form.Group>\n\n              {/* =============SUBMIT============= */}\n              <Form.Group as={Row}>\n                <Col md={{ span: 10, offset: 4 }}>\n                  <Button type='submit'>Login</Button>\n                </Col>\n              </Form.Group>\n            </Form>\n            {/* ===============LINK================ */}\n            Don't have an account?\n            <Link to='/registration'>Create an account</Link>\n          </Row>\n        </Col>\n        {/* =================LEFT COLUMN================ */}\n        <Col md={8} className='left-col'>\n          <Image className='background-img' src={background}></Image>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport RegistrationPage from './components/RegistrationPage'\nimport MainPage from './components/MainPage'\nimport LoginPage from './components/LoginPage'\nimport './styles/App.css'\nimport './styles/Registration.css'\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/registration'>\n          <RegistrationPage />\n        </Route>\n        <Route path='/main'>\n          <MainPage />\n        </Route>\n        <Route path='/'>\n          <LoginPage />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}